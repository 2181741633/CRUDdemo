<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.s.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.s.entity.User">
        <id column="u_id" jdbcType="INTEGER" property="uId"/>
        <result column="u_name" jdbcType="VARCHAR" property="uName"/>
        <result column="u_email" jdbcType="VARCHAR" property="uEmail"/>
        <result column="u_gender" jdbcType="CHAR" property="uGender"/>
        <result column="d_id" jdbcType="INTEGER" property="dId"/>
    </resultMap>
    <resultMap id="WIthDeptResultMap" type="com.s.entity.User">
        <id column="u_id" jdbcType="INTEGER" property="uId"/>
        <result column="u_name" jdbcType="VARCHAR" property="uName"/>
        <result column="u_email" jdbcType="VARCHAR" property="uEmail"/>
        <result column="u_gender" jdbcType="CHAR" property="uGender"/>
        <result column="d_id" jdbcType="INTEGER" property="dId"/>
        <association property="dept" javaType="com.s.entity.Dept">
            <id column="d_id" property="dId"></id>
            <result column="d_name" property="dName"/>
        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    u_id, u_name, u_email, u_gender, d_id
  </sql>
    <sql id="WithDept_Column_List">
        a.u_id, a.u_name, a.u_email, a.u_gender, a.d_id,b.d_id,b.d_name
    </sql>
    <select id="selectByExamplewithDept" resultMap="WIthDeptResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="WithDept_Column_List"/>
        from tb_user a
        left join tb_dept b on a.d_id = b.d_id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKeywithDept" resultMap="WIthDeptResultMap">
        select
        <include refid="WithDept_Column_List"/>
        from tb_user a
        left join tb_dept b on a.d_id = b.d_id
        where u_id = #{uId,jdbcType=INTEGER}
    </select>
    <select id="selectByExample" parameterType="com.s.entity.UserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tb_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_user
        where u_id = #{uId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_user
    where u_id = #{uId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.s.entity.UserExample">
        delete from tb_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.s.entity.User">
    insert into tb_user (u_id, u_name, u_email, 
      u_gender, d_id)
    values (#{uId,jdbcType=INTEGER}, #{uName,jdbcType=VARCHAR}, #{uEmail,jdbcType=VARCHAR}, 
      #{uGender,jdbcType=CHAR}, #{dId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.s.entity.User">
        insert into tb_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uId != null">
                u_id,
            </if>
            <if test="uName != null">
                u_name,
            </if>
            <if test="uEmail != null">
                u_email,
            </if>
            <if test="uGender != null">
                u_gender,
            </if>
            <if test="dId != null">
                d_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uId != null">
                #{uId,jdbcType=INTEGER},
            </if>
            <if test="uName != null">
                #{uName,jdbcType=VARCHAR},
            </if>
            <if test="uEmail != null">
                #{uEmail,jdbcType=VARCHAR},
            </if>
            <if test="uGender != null">
                #{uGender,jdbcType=CHAR},
            </if>
            <if test="dId != null">
                #{dId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.s.entity.UserExample" resultType="java.lang.Long">
        select count(*) from tb_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tb_user
        <set>
            <if test="record.uId != null">
                u_id = #{record.uId,jdbcType=INTEGER},
            </if>
            <if test="record.uName != null">
                u_name = #{record.uName,jdbcType=VARCHAR},
            </if>
            <if test="record.uEmail != null">
                u_email = #{record.uEmail,jdbcType=VARCHAR},
            </if>
            <if test="record.uGender != null">
                u_gender = #{record.uGender,jdbcType=CHAR},
            </if>
            <if test="record.dId != null">
                d_id = #{record.dId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tb_user
        set u_id = #{record.uId,jdbcType=INTEGER},
        u_name = #{record.uName,jdbcType=VARCHAR},
        u_email = #{record.uEmail,jdbcType=VARCHAR},
        u_gender = #{record.uGender,jdbcType=CHAR},
        d_id = #{record.dId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.s.entity.User">
        update tb_user
        <set>
            <if test="uName != null">
                u_name = #{uName,jdbcType=VARCHAR},
            </if>
            <if test="uEmail != null">
                u_email = #{uEmail,jdbcType=VARCHAR},
            </if>
            <if test="uGender != null">
                u_gender = #{uGender,jdbcType=CHAR},
            </if>
            <if test="dId != null">
                d_id = #{dId,jdbcType=INTEGER},
            </if>
        </set>
        where u_id = #{uId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.s.entity.User">
    update tb_user
    set u_name = #{uName,jdbcType=VARCHAR},
      u_email = #{uEmail,jdbcType=VARCHAR},
      u_gender = #{uGender,jdbcType=CHAR},
      d_id = #{dId,jdbcType=INTEGER}
    where u_id = #{uId,jdbcType=INTEGER}
  </update>
</mapper>